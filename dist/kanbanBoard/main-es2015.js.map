{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/multiuser/friend-list/friend-list.component.ts","./src/app/multiuser/friend-list/friend-list.component.html","./src/app/multiuser/multi-user.service.ts","./src/app/multiuser/multiuser.module.ts","./src/app/multiuser/online-users/online-users.component.ts","./src/app/multiuser/online-users/online-users.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/shared/create-task/create-task.component.ts","./src/app/shared/create-task/create-task.component.html","./src/app/shared/edit-task/edit-task.component.ts","./src/app/shared/edit-task/edit-task.component.html","./src/app/shared/shared.module.ts","./src/app/task/router-guard.service.ts","./src/app/task/subtasks/subtasks.component.ts","./src/app/task/subtasks/subtasks.component.html","./src/app/task/task.module.ts","./src/app/task/tasklist.service.ts","./src/app/task/tasklist/tasklist.component.ts","./src/app/task/tasklist/tasklist.component.html","./src/app/task/tasks/tasks.component.ts","./src/app/task/tasks/tasks.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/recoverpassword/recoverpassword.component.ts","./src/app/user/recoverpassword/recoverpassword.component.html","./src/app/user/signup/signup.component.ts","./src/app/user/signup/signup.component.html","./src/app/user/user.module.ts","./src/app/user/user.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './user/login/login.component';\nimport { SignupComponent } from './user/signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { TasklistComponent } from './task/tasklist/tasklist.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent, pathMatch: 'full' },\n  { path: 'signup', component: SignupComponent, pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, pathMatch: 'full' },\n  { path: '404', component: NotFoundComponent },\n  { path: 'taskList', component: TasklistComponent, pathMatch: 'full' },\n  { path: '**', redirectTo: '/404' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'kanbanBoard';\n  constructor() {}\n}\n","<div class=\"container-sm\">\n  <nav class=\"navbar sticky-top navbar-expand-lg navbar-light title heading\">\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarTogglerDemo01\"\n      aria-controls=\"navbarTogglerDemo01\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n      <a class=\"navbar-brand\" href=\"/\">\n        <img\n          src=\"assets/todo.png\"\n          width=\"40\"\n          height=\"40\"\n          class=\"d-inline-block align-top\"\n          alt=\"\"\n        />\n        KanbanBoard\n      </a>\n    </div>\n  </nav>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport '@angular/compiler';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserModule } from './user/user.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastNotificationsModule } from 'ngx-toast-notifications';\nimport { TaskModule } from './task/task.module';\nimport { SharedModule } from './shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MultiuserModule } from './multiuser/multiuser.module';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, NotFoundComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    UserModule,\n    TaskModule,\n    SharedModule,\n    NgbModule,\n    FormsModule,\n    MultiuserModule,\n    BrowserAnimationsModule,\n    ToastNotificationsModule.forRoot({\n      duration: 3500,\n      type: 'primary',\n      autoClose: true,\n      position: 'top-right',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <div class=\"introduction\">\n    <p>\n      Welcome to KanbanBoard,A perfect way to manage Your tasks in a shared way\n      with your peers and friends. Let's get Started\n    </p>\n    <button [routerLink]=\"['/login']\">Login</button>\n    <button [routerLink]=\"['/signup']\" class=\"ml-4\">SignUp</button>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { MultiUserService } from '../multi-user.service';\nimport { Cookie } from 'ng2-cookies';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\n\n@Component({\n  selector: 'app-friend-list',\n  templateUrl: './friend-list.component.html',\n  styleUrls: ['./friend-list.component.css'],\n})\nexport class FriendListComponent implements OnInit, OnDestroy {\n  @Input() userId: any;\n  @Input() username: any;\n  @Output()\n  friends: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  selectedFriend: EventEmitter<any> = new EventEmitter<any>();\n  @Output()\n  reloadTaskList: EventEmitter<any> = new EventEmitter<any>();\n\n  private authToken: String;\n  public resultList: any = [];\n  public friendsList: any = []; //status -accepted\n  public friendListObj: any = []; //for selection purpose\n  public pendingFriendLists: any = []; //status --pending\n  public toApproveRequest: any = []; //status --pending && recieverId==this.userId\n  public rejectedLists: any = []; //status --rejected\n\n  constructor(\n    private multiUserService: MultiUserService,\n    private _toaster: Toaster\n  ) {\n    this.authToken = Cookie.get('authToken');\n  }\n\n  ngOnInit(): void {\n    console.debug('NGINIT_______FRIENDLIST');\n    /**get friend list on user's login */\n    this.getFriends();\n    /**listen for any friend request made */\n    this.getFriendRequestList();\n    /**listen for any approval/rejection for this user */\n    this.fRequestUpdateListener();\n    /**listen for any updates made by friends */\n    this.friendlyUpdatesListener();\n  }\n  ngOnDestroy(): void {}\n  public handeShakeAuthentication(): any {\n    console.debug('listen to hand shake');\n    this.multiUserService.autheticateUser().subscribe((data) => {\n      this.multiUserService.setUser(this.authToken);\n      this.getFriends();\n    });\n  }\n  /**get friend list by API end point */\n  public getFriends(): any {\n    //console.debug('get online users list', this.userId);\n    let user = {\n      senderId: this.userId,\n    };\n    this.multiUserService.getFriendRequests(user).subscribe(\n      (response) => {\n        //console.debug('friend reques::', response.message);\n        //console.debug('friend reques::', typeof response.data);\n\n        if (response.status === 200) {\n          this.resultList = response.data;\n          this.friends.emit(response.data);\n          this.refineLists(this.resultList);\n        }\n      },\n      (error) => {\n        console.error('Error::', error.error);\n      }\n    );\n  }\n  /**compute different type of friend list */\n  public refineLists(friends): any {\n    //console.debug('refining list:: for different groups', friends);\n    friends.map((req) => {\n      switch (req.status) {\n        case 'pending':\n          /**compute pending list based when user id the sender and include onle once */\n          if (\n            req.senderId == this.userId &&\n            !this.pendingFriendLists.includes(req.senderId)\n          ) {\n            this.pendingFriendLists.push(req);\n          }\n          /**compute the approval list for pending req and later filter\n           * based on when the user is the reciever of the request Line NO(101)\n           */\n          this.toApproveRequest.push(req);\n          break;\n        case 'accepted':\n          /**include id for openFriendsItem */\n          if (req.senderId === this.userId) {\n            this.friendsList.push(`${req.recieverName}:${req.recieverId}`);\n          }\n          if (\n            req.recieverId === this.userId &&\n            !this.friendsList.includes(req.senderName)\n          ) {\n            this.friendsList.push(`${req.senderName}:${req.senderId}`);\n            this.friendListObj.push(req);\n          }\n      }\n    });\n    /**filter approval list\n     * based on when the user is the reciever of the request Line NO\n     */\n    this.toApproveRequest = this.toApproveRequest.filter(\n      (usr) => usr.recieverId == this.userId\n    );\n    //console.debug('to approve list::', this.toApproveRequest);\n    //console.debug('friend list::', this.friendsList);\n  }\n  /**listen for any friend request made for this user and update the friend list */\n  public getFriendRequestList(): any {\n    this.multiUserService.getUpdatedFriendList().subscribe((data) => {\n      /**updated the existing friend's list after any request is added or approved*/\n      this.getFriends();\n    });\n  }\n  /**approve/reject friend request */\n  public updateFRequest(request, action): any {\n    //console.debug('Clicked updateFRequest:', action);\n    let updatedFriendRequest = { ...request, status: action };\n    /**emit the updated request */\n    this.multiUserService.updateFriendRequest(updatedFriendRequest);\n    /**call for updated friend list API */\n    setTimeout(() => this.getFriends(), 1200);\n  }\n\n  /**listen for updated approval & rejection if it's for this userID */\n  public fRequestUpdateListener(): any {\n    this.multiUserService.friendRequestAction().subscribe((updatedRequest) => {\n      const {\n        recieverId,\n        recieverName,\n        senderId,\n        senderName,\n        status,\n        uniqueCombination,\n      } = updatedRequest;\n      /**if senderId is this userId , this request is meant for self\n       * take action accordingly\n       */\n      if (senderId === this.userId) {\n        /**toast approval/rejection */\n        this._toaster.open({\n          text: `${recieverName} ${status} your request`,\n          type: status === 'accepted' ? 'success' : 'dark',\n        });\n        /**refine current pendinglist based on current action(accepted/rejected) */\n        if (status === 'accepted') {\n          this.pendingFriendLists = this.pendingFriendLists.filter((req) => {\n            req.senderId === senderId;\n          });\n        }\n      }\n      if (recieverId === this.userId && status === 'accepted') {\n        /**toast approver for success */\n        this._toaster.open({\n          text: `${senderName} is now your friend`,\n          type: 'success',\n        });\n        /**clean up approval list for this request on client side*/\n        this.toApproveRequest = this.toApproveRequest.filter((req) => {\n          req.senderId === senderId;\n        });\n      }\n      /**get the updated friendlist from server*/\n      this.getFriends();\n    });\n  }\n  /**Invoke addition to friendsItem  */\n  public openFriendsItem(friend): any {\n    console.debug('friend::', friend);\n    this.selectedFriend.emit(friend);\n  }\n  /**listener for friendly task updates */\n  public friendlyUpdatesListener(): any {\n    let toastString;\n    let friendList = [];\n    console.debug('Friendly task updates');\n    this.multiUserService.friendlyTaskUpdates().subscribe((updates) => {\n      console.debug('updates listener::', updates);\n      if (typeof updates === 'string') {\n        toastString = updates;\n        console.debug('toast string::', toastString);\n      } else {\n        friendList = updates;\n        console.debug('friendlist::', updates);\n      }\n      console.debug('is friend::', friendList, this.userId);\n      if (friendList.length !== 0) {\n        friendList.map((fr) => {\n          if (fr !== null && fr === this.userId) {\n            console.debug('Found friend');\n            this._toaster.open({ text: toastString, type: 'dark' });\n            //emit reload tasklist event\n            console.debug(\"reloading task for  ,since it's a friend\");\n            setTimeout(() => this.reloadTaskList.emit(this.userId), 1400);\n          }\n        });\n      }\n    });\n  }\n}\n","<div>\n  <span class=\"badge badge-dark mt-2\">Friend Requests</span>\n  <ul class=\"list-group-flush list-group-item-light onlineUsers\">\n    <li class=\"list-group-item\" *ngFor=\"let friend of pendingFriendLists\">\n      {{ friend.recieverName }}\n      <span class=\"badge badge-pill badge-primary ml-3\">{{\n        friend.status\n      }}</span>\n    </li>\n  </ul>\n  <span class=\"badge badge-success\">Friends</span>\n  <ul class=\"list-group-flush list-group-item-light onlineUsers\">\n    <li\n      class=\"list-group-item\"\n      *ngFor=\"let friend of friendsList\"\n      (click)=\"openFriendsItem(friend)\"\n    >\n      {{ friend.split(\":\")[0] }}\n    </li>\n  </ul>\n  <span class=\"badge badge-info\">Take Actions</span>\n  <ul class=\"list-group-flush list-group-item-light onlineUsers\">\n    <li class=\"list-group-item\" *ngFor=\"let friend of toApproveRequest\">\n      {{ friend.senderName }}\n      <button\n        class=\"btn btn-outline-dark btn-sm\"\n        (click)=\"updateFRequest(friend, 'accepted')\"\n      >\n        Approve</button\n      ><button\n        class=\"btn btn-outline-dark btn-sm ml-3\"\n        (click)=\"updateFRequest(friend, 'rejected')\"\n      >\n        Reject\n      </button>\n    </li>\n  </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, throwError, onErrorResumeNext, observable } from 'rxjs';\nimport * as io from 'socket.io-client';\nimport { UserService } from '../user/user.service';\n\nimport { Cookie } from 'ng2-cookies';\n@Injectable({\n  providedIn: 'root',\n})\nexport class MultiUserService {\n  private socketUrl = 'http://api.kanbanboard.co.in/multiusers';\n  private apiBaseUrl = 'http://api.kanbanboard.co.in/api/v1';\n  private authToken: any;\n  private socket;\n  constructor(private _http: HttpClient, private userService: UserService) {\n    /**init client socket */\n    this.socket = io(this.socketUrl, {\n      'auto connect': true,\n      'max reconnection attempts': 10,\n      multiplex: false,\n      'try multiple transports': true,\n    });\n  }\n  //handle exceptions\n  public handleError(error: HttpErrorResponse) {\n    console.debug('Http Error:', error.message);\n    return Observable.throw(error.message);\n  }\n  public httpHeaderOptions = {\n    headers: new HttpHeaders({\n      authToken: this.userService.getAutheticatedUserInfo().authToken,\n    }),\n  };\n  /**define listeners and emitters */\n  /**1: Listen to authentication handshake */\n  public autheticateUser = () => {\n    console.debug('Auth user listener');\n    return Observable.create((observer) => {\n      this.socket.on('authenticate', (data) => {\n        observer.next(data);\n      });\n    });\n  };\n  /**2 send/emit authToken for authentication */\n  public setUser = (authToken) => {\n    console.debug('Emmit user authentication');\n    this.socket.emit('set-user', authToken);\n  };\n  /**3 Get Online Userlist by listning to online-users broadcase */\n  public getOnlineUserList = () => {\n    //console.debug('get online user service');\n    return Observable.create((observer) => {\n      this.socket.on('online-users', (data) => {\n        observer.next(data);\n      });\n    });\n  };\n  /**emitt disconnect event with userId */\n  public disconnectUser = (userId) => {\n    //console.debug('Disconnecting user', userId);\n    this.socket.emit('disconnected', userId);\n    /**delete cookie and  localstorage*/\n    //console.debug('clearing localstorage and cookie');\n    localStorage.clear();\n    Cookie.delete('name');\n    Cookie.delete('authToken');\n    Cookie.delete('email');\n    Cookie.delete('userId');\n  };\n  /**emit friend request */\n  public sendFriendRequest = (friendRequest) => {\n    //console.debug('Send friend Request:');\n    this.socket.emit('sentFriendRequest', friendRequest);\n  };\n  /**listen for friend request */\n  public recieveFriendRequest = (recieverId) => {\n    return Observable.create((observable) => {\n      this.socket.on(recieverId, (data) => {\n        observable.next(data);\n      });\n    });\n  };\n  /**fetch friend requests */\n  public getFriendRequests(senderId): any {\n    return this._http.post(\n      `${this.apiBaseUrl}/getFriendRequests`,\n      senderId,\n      this.httpHeaderOptions\n    );\n  }\n  /**listen for friendsList */\n  public getUpdatedFriendList(): any {\n    return Observable.create((observable) => {\n      this.socket.on('friendlist-updates', (data) => {\n        observable.next(data);\n      });\n    });\n  }\n  /**emit request approve/rejection FR */\n  public updateFriendRequest = (friendRequest) => {\n    //console.debug('Emit actions on fr request');\n    this.socket.emit('update-friend-request', friendRequest);\n  };\n  /**listen for friend request approval/rejection for appropiate sender */\n  public friendRequestAction(): any {\n    /**here fr component will update and toast for approval\n     * or rejection & fr list updates based appropiate\n     * senderId (i.e if senderId is userId)\n     */\n    return Observable.create((observable) => {\n      this.socket.on('friend-request-updates', (data) => {\n        observable.next(data);\n      });\n    });\n  }\n  /**emit update notification to friends when any edit if\n   * performed 'updates' has What was updated by whom\n   */\n  public notifyFriendsForUpdates(updates, friendlist): any {\n    console.debug('emit notify friendly updates');\n    this.socket.emit('friend-updated-tasks', updates, friendlist);\n  }\n  /**listen for updates from friends and show notificationa\n   * and reload tasklist if userId is in Friend's list\n   */\n  public friendlyTaskUpdates(): any {\n    console.debug('friendly task updates');\n    return Observable.create((observable) => {\n      this.socket.on('updates-from-friend', (updates, friendList) => {\n        observable.next(updates);\n        observable.next(friendList);\n        observable.complete();\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FriendListComponent } from './friend-list/friend-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MultiUserService } from './multi-user.service';\nimport { OnlineUsersComponent } from './online-users/online-users.component';\n\n@NgModule({\n  declarations: [FriendListComponent, OnlineUsersComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'friendlist', component: FriendListComponent, pathMatch: 'full' },\n    ]),\n  ],\n  exports: [FriendListComponent, OnlineUsersComponent],\n  providers: [MultiUserService],\n})\nexport class MultiuserModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MultiUserService } from '../multi-user.service';\nimport { Cookie } from 'ng2-cookies';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\n@Component({\n  selector: 'app-online-users',\n  templateUrl: './online-users.component.html',\n  styleUrls: ['./online-users.component.css'],\n})\nexport class OnlineUsersComponent implements OnInit {\n  @Input() userId: any;\n  @Input() username: any;\n  @Input() usersFriend: any = [];\n  @Output()\n  onlineUsers: EventEmitter<Array<Object>> = new EventEmitter<Array<Object>>();\n\n  private authToken: String;\n  public onlineUsersList: any[];\n  public isFriend: Boolean = true;\n  constructor(\n    private multiUserService: MultiUserService,\n    private _toaster: Toaster\n  ) {\n    this.authToken = Cookie.get('authToken');\n    /**keep listeners active */\n    this.getOnlineUsersList();\n    this.recieveFriendRequestByUserId();\n  }\n\n  ngOnInit(): void {\n    this.handeShakeAuthentication();\n    this.getOnlineUsersList();\n    this.recieveFriendRequestByUserId();\n  }\n\n  public handeShakeAuthentication(): any {\n    console.debug('listen to hand shake online compoenent');\n    this.multiUserService.autheticateUser().subscribe((data) => {\n      this.multiUserService.setUser(this.authToken);\n      this.getOnlineUsersList();\n    });\n  }\n  public getOnlineUsersList(): any {\n    //console.debug('get online users list');\n    this.multiUserService.getOnlineUserList().subscribe((data) => {\n      //console.debug('Online users from socket::', data);\n      /**filter out the current user */\n      let users = [];\n      data.map((d) => {\n        if (d.userId !== this.userId) {\n          users.push(d);\n        }\n      });\n      //console.debug('final list:', users);\n      this.onlineUsers.emit(users);\n      this.onlineUsersList = users;\n    });\n  }\n  public addFriend(userId, username): any {\n    //console.debug('Add friend start', userId);\n    /**to and from denotes friend request sent to and from user */\n    let friendList = {\n      recieverId: userId,\n      recieverName: username,\n      senderId: this.userId,\n      senderName: this.username,\n    };\n    this.multiUserService.sendFriendRequest(friendList);\n    //console.debug('fiendlist::', friendList);\n  }\n  public recieveFriendRequestByUserId(): any {\n    //console.debug('listen to friend request');\n    this.multiUserService\n      .recieveFriendRequest(this.userId)\n      .subscribe((data) => {\n        //console.debug('recieved friend request for ', data);\n        const { recieverId, recieverName, senderId, senderName } = data;\n        this._toaster.open({\n          text: `${senderName} sent you an friend request`,\n          type: 'success',\n        });\n      });\n  }\n}\n","<div>\n  <ul class=\"list-group-flush list-group-item-light onlineUsers\">\n    <li class=\"list-group-item\" *ngFor=\"let user of onlineUsersList\">\n      {{ user.name }}\n      <button\n        *ngIf=\"!usersFriend.includes(user.userId)\"\n        type=\"button\"\n        class=\"btn btn-light\"\n        (click)=\"addFriend(user.userId, user.name)\"\n      >\n        Add Friend\n      </button>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"loginbox\">\n    <h1><span class=\"badge badge-danger\">404</span></h1>\n    <h1>Error Not Found!!!</h1>\n    <blockquote class=\"blockquote text-center\">\n      <footer class=\"blockquote-footer\">\n        The Page you Requested Is not Found, Please Login\n      </footer>\n    </blockquote>\n    <button class=\"ml-2\" [routerLink]=\"['/login']\">Login</button>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { TasklistService } from '../../task/tasklist.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { MultiUserService } from '../../multiuser/multi-user.service';\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css'],\n})\nexport class CreateTaskComponent implements OnInit {\n  /**common input fields */\n  @Input() userId: any;\n  @Input() operationName: String;\n  @Input() loggedInUser: any;\n  @Input() username: any;\n  @Input() flagOperationForFriend: any;\n  @Input() usersFriend: any;\n  /**task field */\n  @Input() taskListId: any;\n  @Input() taskName: any;\n  /**tasklist field */\n  @Input() taskListName: any;\n  /**subtask field */\n  @Input() subTaskName: any;\n  @Input() taskId: any;\n\n  public createNewtaskResponse: String;\n  public errorResponse: Boolean = true;\n  public successResponse: Boolean = true;\n\n  //component will emit tasklist reload\n  @Output()\n  notifyNewTaskList: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  notifyNewTask: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  notifyNewSubTask: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  closeModal: EventEmitter<String> = new EventEmitter<String>();\n\n  constructor(\n    private taskService: TasklistService,\n    private _toast: Toaster,\n    private multiUserService: MultiUserService\n  ) {}\n\n  ngOnInit(): void {}\n  /**create a single task */\n  public createTask(): any {\n    console.debug('operation::', this.operationName);\n    if (this.operationName.endsWith('New Task')) {\n      console.debug('create new task');\n      let taskInfo = {\n        taskListId: this.taskListId,\n        userId: this.userId,\n        name: this.taskName,\n        status: 'open',\n      };\n      console.debug('taskinfo::', taskInfo);\n      this.taskService.createTask(taskInfo).subscribe(\n        (response) => {\n          console.debug('Create task response::', response.message);\n          console.debug('error::', response);\n          /**New task Create success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.createNewtaskResponse = response.message;\n            console.debug('emitt new task change', response.data);\n            //this.notifyNewTask.emit(response.data);\n            /**notify tasklist component for task updates */\n            let refreshUserId;\n            if (this.flagOperationForFriend) {\n              refreshUserId = this.userId;\n            } else {\n              refreshUserId = this.loggedInUser;\n            }\n            console.debug('refreshing for::', refreshUserId);\n            //this.notifyEditTask.emit(refreshUserId);\n            this.notifyNewTask.emit(refreshUserId);\n            /**emit update notifiation to friends if any*/\n            let notification = `${this.username} created a Task`;\n            this.notifyFriends(notification);\n\n            /**emit close modal event */\n            this.closeModal.emit();\n          }\n          if (response.error === true && response.status === 400) {\n            this._toast.open({ text: `${response.data}`, type: 'danger' });\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while */\n          this.errorResponse = false;\n          this.createNewtaskResponse = error.error.message;\n          console.debug('resposen::', this.createNewtaskResponse);\n\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n    if (this.operationName.includes('New SubTask')) {\n      console.debug('create new subtask');\n      let taskInfo = {\n        taskId: this.taskId,\n        name: this.taskName,\n        status: 'open',\n        userId: this.userId,\n      };\n      console.debug('subtaskinfor::', taskInfo);\n      this.taskService.createSubTask(taskInfo).subscribe(\n        (response) => {\n          console.debug('Create task response::', response.message);\n\n          /**New subtask Create success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.createNewtaskResponse = response.message;\n            /**notify tasklist component for task updates */\n            let refreshUserId;\n            if (this.flagOperationForFriend) {\n              refreshUserId = this.userId;\n            } else {\n              refreshUserId = this.loggedInUser;\n            }\n            console.debug('refreshing for::', refreshUserId);\n            this.notifyNewSubTask.emit(refreshUserId);\n            /**emit update notifiation to friends if any*/\n            let notification = `${this.username} created a SubTask`;\n            this.notifyFriends(notification);\n\n            /**emit modal close event */\n            this.closeModal.emit();\n          }\n          if (response.error === true && response.status === 400) {\n            this._toast.open({ text: `${response.data}`, type: 'danger' });\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while */\n          this.errorResponse = false;\n          this.createNewtaskResponse = error.error.message;\n          console.debug('resposen-subtask::', this.createNewtaskResponse);\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n    if (this.operationName.includes('New TaskList')) {\n      console.debug('create new tasklist');\n      let taskListInfo = {\n        userId: this.userId,\n        name: this.taskName,\n      };\n      this.taskService.createTaskList(taskListInfo).subscribe(\n        (response) => {\n          console.debug('Create tasklist  response::', response.message);\n\n          /**New subtask Create success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.createNewtaskResponse = response.message;\n            console.debug('emmit new tasklist create', response.data);\n            this.notifyNewTaskList.emit(response.data);\n            /**emit modal close event */\n            this.closeModal.emit();\n            /**emit create notifiation to friends if any*/\n            let notification = `${this.username} created a TaskList`;\n            this.notifyFriends(notification);\n          }\n          if (response.error === true && response.status === 400) {\n            this._toast.open({ text: `${response.data}`, type: 'danger' });\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while */\n          this.errorResponse = false;\n          this.createNewtaskResponse = error.error.message;\n          console.debug('resposen-taklist::', this.createNewtaskResponse);\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n  }\n\n  public notifyFriends(notification): any {\n    console.debug('notify friends for updates');\n    /**emit update notifiation to friends if any*/\n    if (this.usersFriend.length !== 0) {\n      console.debug('updates string::', notification, this.usersFriend);\n      this.multiUserService.notifyFriendsForUpdates(\n        notification,\n        this.usersFriend\n      );\n    }\n  }\n}\n","<h3>\n  <span class=\"badge badge-secondary\">{{ operationName }}</span>\n</h3>\n<form #createTaskForm=\"ngForm\" (ngSubmit)=\"createTask()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"taskName\"\n      required\n      [(ngModel)]=\"taskName\"\n      #_name=\"ngModel\"\n    />\n    <div [hidden]=\"_name.valid || _name.pristine\" class=\"alert alert-danger\">\n      TaskName is Required\n    </div>\n    <div\n      [hidden]=\"errorResponse\"\n      class=\"badge badge-danger\"\n      [ngClass]=\"{\n        'badge badge-danger': errorResponse,\n        'badge badge-success': successResponse\n      }\"\n    >\n      {{ createNewtaskResponse }}\n    </div>\n  </div>\n  <button class=\"mt-2\" [disabled]=\"!createTaskForm.form.valid\">\n    Create Task\n  </button>\n</form>\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { TasklistService } from '../../task/tasklist.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { MultiUserService } from '../../multiuser/multi-user.service';\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.css'],\n})\nexport class EditTaskComponent implements OnInit {\n  /**common input fields */\n  @Input() userId: any;\n  @Input() operationName: String;\n  @Input() name: String;\n  @Input() status: String;\n  @Input() loggedInUser: String;\n  @Input() usersFriend: any;\n  @Input() username: any;\n  /**task field */\n  @Input() taskListId: any;\n\n  /**tasklist field */\n  @Input() taskListName: any;\n  @Input() selectTasksList: any[];\n  /**subtask field */\n  @Input() subTaskName: any;\n  @Input() taskId: any;\n  @Input() subTaskId: any;\n  @Input() selectedFriendName: any;\n  @Input() selectTasks: any[];\n  @Input() flagOperationForFriend: any[];\n  public editTaskResponse: String;\n  public errorResponse: Boolean = true;\n  public successResponse: Boolean = true;\n  public tasklist: any;\n  public toggleTaskList: Boolean = false;\n  public toggleTasks: Boolean = false;\n  public toggleStatusSelection: Boolean = false;\n  public selected: String;\n  public selectedTask: String;\n  public selectedTaskList: any = [];\n  public statusOptions: String[];\n\n  //component will emit tasklist reload\n\n  @Output()\n  notifyEditTaskList: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  notifyEditTask: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  notifyEditSubTask: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  closeModal: EventEmitter<String> = new EventEmitter<String>();\n\n  constructor(\n    private taskService: TasklistService,\n    private _toast: Toaster,\n    private multiUserService: MultiUserService\n  ) {}\n\n  ngOnInit(): void {\n    this.statusOptions = ['open', 'done'];\n    //this.selected = this.selectTasks[0];\n    /**toggle selection item based on task ops */\n    if (this.operationName === 'Edit TaskList') {\n      console.debug('ops edit tasklist::', this.selectTasks);\n      this.toggleTaskList = true;\n      this.toggleTasks = true;\n      this.toggleStatusSelection = true;\n    }\n    if (this.operationName === 'Edit Task') {\n      console.debug('ops edit task::', this.selectTasksList);\n      console.debug('ops edit task');\n      /*this.selectTasksList.map((list) => {\n        if (list.taskListId === this.taskListId) {\n          console.debug('taskname::', list.name);\n          this.selectedTask = list.name;\n        }\n      });*/\n      this.toggleTaskList = false;\n      this.toggleTasks = true;\n      //console.debug('selected value::', this.selectedTask);\n    }\n    if (this.operationName === 'Edit SubTask') {\n      console.debug('ops edit subtask::', this.selectTasks);\n      console.debug('ops edit subtasks');\n      this.toggleTaskList = true;\n      this.toggleTasks = false;\n      this.getAllTask();\n    }\n  }\n  /**fetch all tasks for selection use while updating subtasks */\n  public getAllTask(): any {\n    let taskInfo = {\n      taskListId: this.taskListId,\n      userId: this.userId,\n    };\n    console.debug('input:', taskInfo);\n    this.taskService.getTasks(taskInfo).subscribe(\n      (response) => {\n        console.debug('get all task res::', response.message);\n        /**updated tasks */\n        this.selectTasks = response.data;\n        console.debug('All tasks::', this.selectTasks);\n        this.selectTasks.map((list) => {\n          if (list.taskId === this.taskId) {\n            console.debug('taskfor subtask::', list.taskId);\n            this.selected = list.taskId;\n          }\n        });\n        console.debug('selected task::', this.selected);\n      },\n      (error) => {\n        console.warn('Error::', error.error);\n      }\n    );\n  }\n  public editTask(): any {\n    console.debug('editing task');\n    /**create a single task */\n    console.debug('operation::', this.operationName);\n    if (this.operationName.endsWith('Edit Task')) {\n      console.debug('edit task');\n      let taskInfo = {\n        taskListId: this.taskListId,\n        taskId: this.taskId,\n        userId: this.userId,\n        operation: 'edit',\n        update: {\n          name: this.name,\n          status: this.status,\n          taskListId: this.selectedTask,\n        },\n      };\n      console.debug('update taskinfo::', taskInfo);\n      this.taskService.updateTask(taskInfo).subscribe(\n        (response) => {\n          console.debug('update task response::', response.message);\n\n          /**New task Create success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.editTaskResponse = response.message;\n            console.debug('emitt new task change', response.data);\n            /**notify tasklist component for task updates */\n            let refreshUserId;\n            if (this.flagOperationForFriend) {\n              refreshUserId = this.userId;\n            } else {\n              refreshUserId = this.loggedInUser;\n            }\n            console.debug('refreshing for::', refreshUserId);\n            this.notifyEditTask.emit(refreshUserId);\n            /**emit update notifiation to friends if any*/\n            let notification = `${this.username} updated a Task`;\n            this.notifyFriends(notification);\n            /**emit close modal event */\n            this.closeModal.emit();\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while */\n          this.errorResponse = false;\n          this.editTaskResponse = error.error.message;\n          console.debug('resposen::', this.editTaskResponse);\n\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n    if (this.operationName.includes('Edit SubTask')) {\n      console.debug('edit new subtask');\n      let taskInfo = {\n        taskId: this.taskId,\n        subTaskId: this.subTaskId,\n        operation: 'edit',\n        userId: this.userId,\n        update: {\n          name: this.name,\n          status: this.status,\n          taskId: this.selected,\n        },\n      };\n      console.debug('subtaskinfor::', taskInfo);\n      this.taskService.updateSubTask(taskInfo).subscribe(\n        (response) => {\n          console.debug('update task response::', response.message);\n          /**subtask update success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.editTaskResponse = response.message;\n            let refreshUserId;\n            if (this.flagOperationForFriend) {\n              refreshUserId = this.userId;\n            } else {\n              refreshUserId = this.loggedInUser;\n            }\n            this.notifyEditSubTask.emit(refreshUserId);\n            /**emit update notifiation to friends if any*/\n            let notification = `${this.username} updated a SubTask`;\n            this.notifyFriends(notification);\n            /**emit close modal event */\n            this.closeModal.emit();\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while */\n          this.errorResponse = false;\n          this.editTaskResponse = error.error.message;\n          console.debug('resposen-subtask::', this.editTaskResponse);\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n    if (this.operationName.includes('Edit TaskList')) {\n      console.debug('update tasklist');\n      let taskListInfo = {\n        userId: this.userId,\n        taskListId: this.taskListId,\n        operation: 'edit',\n        update: {\n          name: this.name,\n        },\n      };\n      this.taskService.updateTaskList(taskListInfo).subscribe(\n        (response) => {\n          console.debug('update tasklist  response::', response.message);\n\n          /**New subtask update success */\n          if (response.status === 200) {\n            this._toast.open({ text: response.message, type: 'success' });\n            this.errorResponse = false;\n            this.successResponse = true;\n            this.editTaskResponse = response.message;\n            console.debug('emmit  tasklist edit');\n            this.notifyEditTaskList.emit(\n              `${this.name + ':' + this.taskListId}`\n            );\n            /**emit update notifiation to friends if any*/\n            let notification = `${this.username} updated a TaskList`;\n            this.notifyFriends(notification);\n\n            /**emit close modal event */\n            this.closeModal.emit();\n          }\n        },\n        (error) => {\n          console.warn('Error::', error.error);\n          /**compute any error while update*/\n          this.errorResponse = false;\n          this.editTaskResponse = error.error.message;\n          console.debug('resposen-taklist::', this.editTaskResponse);\n          this._toast.open({ text: error.error.message, type: 'danger' });\n        }\n      );\n    }\n  }\n  public notifyFriends(notification): any {\n    console.debug('notify friends for updates');\n    /**emit update notifiation to friends if any*/\n    if (this.usersFriend.length !== 0) {\n      console.debug('updates string::', notification, this.usersFriend);\n      this.multiUserService.notifyFriendsForUpdates(\n        notification,\n        this.usersFriend\n      );\n    }\n  }\n}\n","<h3>\n  <span class=\"badge badge-secondary\">{{ operationName }}</span>\n</h3>\n<form #editTaskForm=\"ngForm\" (ngSubmit)=\"editTask()\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"name\"\n      required\n      [(ngModel)]=\"name\"\n      #_name=\"ngModel\"\n    />\n    <div [hidden]=\"_name.valid || _name.pristine\" class=\"alert alert-danger\">\n      TaskName is Required\n    </div>\n    <div [hidden]=\"toggleTaskList\">\n      <select\n        class=\"form-control mt-1\"\n        #list\n        required\n        [(ngModel)]=\"selectedTask\"\n        name=\"selectedTask\"\n        #_tsk=\"ngModel\"\n      >\n        <option\n          *ngFor=\"let task of selectTasksList\"\n          [value]=\"task.taskListId\"\n          >{{ task.name }}</option\n        >\n      </select>\n    </div>\n    <div [hidden]=\"toggleTasks\">\n      <select\n        class=\"form-control mt-1\"\n        #list\n        required\n        [(ngModel)]=\"selected\"\n        name=\"selected\"\n        #_tsk=\"ngModel\"\n      >\n        <option *ngFor=\"let task of selectTasks\" [value]=\"task.taskId\">{{\n          task.name\n        }}</option>\n      </select>\n    </div>\n    <div class=\"status\" [hidden]=\"toggleStatusSelection\">\n      <select\n        class=\"form-control mt-1\"\n        #list\n        required\n        [(ngModel)]=\"status\"\n        name=\"status\"\n        #_tsk=\"ngModel\"\n      >\n        <option *ngFor=\"let status of statusOptions\" [value]=\"status\">{{\n          status\n        }}</option>\n      </select>\n    </div>\n    <div\n      [hidden]=\"errorResponse\"\n      class=\"badge badge-danger\"\n      [ngClass]=\"{\n        'badge badge-danger': errorResponse,\n        'badge badge-success': successResponse\n      }\"\n    >\n      {{ editTaskResponse }}\n    </div>\n  </div>\n  <button class=\"mt-2\">\n    Edit Task\n  </button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule, FormatWidth } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { TasklistComponent } from '../task/tasklist/tasklist.component';\nimport { TaskModule } from '../task/task.module';\nimport { CreateTaskComponent } from './create-task/create-task.component';\nimport { EditTaskComponent } from './edit-task/edit-task.component';\nimport { MultiuserModule } from '../multiuser/multiuser.module';\n@NgModule({\n  declarations: [CreateTaskComponent, EditTaskComponent],\n  imports: [CommonModule, FormsModule, MultiuserModule],\n  exports: [CreateTaskComponent, EditTaskComponent],\n  providers: [TasklistComponent],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router/';\nimport { Cookie } from 'ng2-cookies';\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterGuardService {\n  constructor(private router: Router) {}\n  canActivate(router: ActivatedRouteSnapshot): boolean {\n    console.log('Guard Route');\n    let authToken = Cookie.get('authToken');\n    if (authToken == null || authToken == undefined || authToken == '') {\n      this.router.navigate(['/login']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { TasklistService } from '../tasklist.service';\nimport {} from '../../multiuser/multiuser.module';\n@Component({\n  selector: 'app-subtasks',\n  templateUrl: './subtasks.component.html',\n  styleUrls: ['./subtasks.component.css'],\n})\nexport class SubtasksComponent implements OnInit {\n  //init field\n  @Input() taskId: any;\n  @Input() userId: any;\n  public subtasks: [Object];\n  constructor(private taskService: TasklistService) {}\n  @Output()\n  delete: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  edit: EventEmitter<String> = new EventEmitter<String>();\n  ngOnInit(): void {\n    this.getAllSubTasks();\n  }\n  public getAllSubTasks(): any {\n    let taskInfo = {\n      taskId: this.taskId,\n    };\n    this.taskService.getSubTasks(taskInfo).subscribe(\n      (response) => {\n        /**get subtasks */\n        //console.debug('Subtasks Response::', response.message);\n        if (response.status === 200) this.subtasks = response.data;\n      },\n      (error) => {\n        console.warn('Error fetching Subtasks:', error.error);\n      }\n    );\n  }\n  public addNewSubTask(newSubTask): any {\n    //console.debug('New sub task in subtask component::', newSubTask);\n    this.subtasks.push(newSubTask);\n  }\n  /**emit subtask deletion */\n  public emitSubTaskDeletion(taskId, subTaskId): any {\n    //console.debug('Emit sub task deletetion', taskId, subTaskId);\n    this.delete.emit(`${taskId}:${subTaskId}`);\n  }\n  /**emit subtask edit */\n  public emitEditSubTask(taskId, name, subTaskId, status): any {\n    //console.debug('Emit edit sub task::', taskId, name, subTaskId);\n    this.edit.emit(`${taskId}:${name}:${subTaskId}:${status}`);\n  }\n}\n","<ul class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let task of subtasks\">\n    <span class=\"name\">{{ task.name }}</span>\n    <span class=\"taskHeader\">\n      <img\n        class=\"add mr-2\"\n        src=\"/assets/removetaskicon.png\"\n        (click)=\"emitSubTaskDeletion(task.taskId, task.subTaskId)\"\n      />\n      <img\n        class=\"add\"\n        src=\"/assets/edit.png\"\n        (click)=\"\n          emitEditSubTask(task.taskId, task.name, task.subTaskId, task.status)\n        \"\n      />\n    </span>\n  </li>\n</ul>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TasklistComponent } from './tasklist/tasklist.component';\nimport { TasklistService } from './tasklist.service';\nimport { SharedModule } from '../shared/shared.module';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { SubtasksComponent } from './subtasks/subtasks.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MultiuserModule } from '../multiuser/multiuser.module';\nimport { RouterGuardService } from './router-guard.service';\n@NgModule({\n  declarations: [TasklistComponent, TasksComponent, SubtasksComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    SharedModule,\n    NgbModule,\n    MultiuserModule,\n    RouterModule.forRoot([\n      {\n        path: 'taskList',\n        component: TasklistComponent,\n        pathMatch: 'full',\n        canActivate: [RouterGuardService],\n      },\n    ]),\n  ],\n  providers: [TasklistService, RouterGuardService],\n  exports: [TasksComponent, SubtasksComponent, TasklistComponent],\n})\nexport class TaskModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { UserService } from '../user/user.service';\nimport * as io from 'socket.io-client';\n@Injectable({\n  providedIn: 'root',\n})\nexport class TasklistService {\n  //initialize\n  public baseurl = 'http://api.kanbanboard.co.in/api/v1';\n  private socket;\n  private socketUrl = 'http://api.kanbanboard.co.in/multiusers';\n  constructor(private _http: HttpClient, private userService: UserService) {\n    /**init client socket */\n    this.socket = io(this.socketUrl, {\n      'auto connect': true,\n      multiplex: false,\n      'try multiple transports': true,\n    });\n  }\n  /**define listeners and emitters */\n  /**1: Listen to authentication handshake */\n  public autheticateUser = () => {\n    console.debug('Auth user listener');\n    return Observable.create((observer) => {\n      this.socket.on('authenticate', (data) => {\n        observer.next(data);\n      });\n    });\n  };\n  /**2 send/emit authToken for authentication */\n  public setUser = (authToken) => {\n    console.debug('Emmit user authentication');\n    this.socket.emit('set-user', authToken);\n  };\n  /**3 Get Online Userlist by listning to online-users broadcase */\n  public getOnlineUserList = () => {\n    //console.debug('get online user service');\n    return Observable.create((observer) => {\n      this.socket.on('online-users', (data) => {\n        observer.next(data);\n      });\n    });\n  };\n  //handle exceptions\n  public handleError(error: HttpErrorResponse) {\n    console.debug('Http Error:', error.message);\n    return Observable.throw(error.message);\n  }\n  public httpHeaderOptions = {\n    headers: new HttpHeaders({\n      authToken: this.userService.getAutheticatedUserInfo().authToken,\n    }),\n  };\n\n  //create taskList\n  public createTaskList(taskListData): any {\n    console.debug('https header:', this.httpHeaderOptions);\n    let createTaskListRes = this._http.post(\n      `${this.baseurl}/createTaskList`,\n      taskListData,\n      this.httpHeaderOptions\n    );\n    return createTaskListRes;\n  }\n  //get taskLists for a userId\n  public getTaskLists(userId, skip): any {\n    let allTaskLists = this._http.post(\n      `${this.baseurl}/getAllTaskList/?skip=${skip}`,\n      userId,\n      this.httpHeaderOptions\n    );\n    return allTaskLists;\n  }\n  //created task\n  public createTask(taskDetails): any {\n    //console.debug('create task service:', taskDetails);\n    let createTaskRes = this._http.post(\n      `${this.baseurl}/createTask`,\n      taskDetails,\n      this.httpHeaderOptions\n    );\n    return createTaskRes;\n  }\n  //get tasks for a tasklist and userid\n  public getTasks(taskData): any {\n    let allTasks = this._http.post(\n      `${this.baseurl}/getTasks`,\n      taskData,\n      this.httpHeaderOptions\n    );\n    return allTasks;\n  }\n  //create subtask for a taskid\n  public createSubTask(subTaskDetails): any {\n    let createSubTaskRes = this._http.post(\n      `${this.baseurl}/createSubTask`,\n      subTaskDetails,\n      this.httpHeaderOptions\n    );\n    return createSubTaskRes;\n  }\n  //get subtask for a taskid\n  public getSubTasks(subTaskDetails): any {\n    let allSubTasks = this._http.post(\n      `${this.baseurl}/getSubTasks`,\n      subTaskDetails,\n      this.httpHeaderOptions\n    );\n    return allSubTasks;\n  }\n  /**update task */\n  public updateTask(taskInfo): any {\n    //console.debug('update task sevice::', taskInfo);\n    let udpatedTask = this._http.post(\n      `${this.baseurl}/updateTask`,\n      taskInfo,\n      this.httpHeaderOptions\n    );\n    return udpatedTask;\n  }\n  /**update/delete tasklist */\n  public updateTaskList(taskListInfo): any {\n    console.debug('update tasklist service:');\n    return this._http.post(\n      `${this.baseurl}/updatetaskList`,\n      taskListInfo,\n      this.httpHeaderOptions\n    );\n  }\n  /**update/delete subtask */\n  public updateSubTask(subTaskInfo): any {\n    console.debug('update subtask  servcie');\n    return this._http.post(\n      `${this.baseurl}/updateSubTask`,\n      subTaskInfo,\n      this.httpHeaderOptions\n    );\n  }\n  /**revert changes */\n  public revertLatestChange(userId): any {\n    console.debug('reverting changes::for', userId);\n    return this._http.post(\n      `${this.baseurl}/revertChanges`,\n      userId,\n      this.httpHeaderOptions\n    );\n  }\n}\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  ViewContainerRef,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { TasklistService } from '../tasklist.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { Router, Route } from '@angular/router';\nimport { UserService } from '../../user/user.service';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { MultiUserService } from '../../multiuser/multi-user.service';\nimport { HostListener } from '@angular/core';\n@Component({\n  selector: 'app-tasklist',\n  templateUrl: './tasklist.component.html',\n  styleUrls: ['./tasklist.component.css'],\n})\nexport class TasklistComponent implements OnInit {\n  //scroll postion\n  @ViewChild('scrollBar', { read: ElementRef })\n  public scrollMe: ElementRef;\n  //init fields\n  public taskLists: any = [];\n  public subtasks: any = [];\n  public fetchedAlltaskLists: String;\n  public userId: String;\n  public usersFriendList: any = [];\n  public page: any;\n  public toggleLoadMoreTasks: Boolean = false;\n  /**new task info */\n  public subTaskName: String;\n  public taskListId: String;\n  public taskStatus: String;\n  public taskId: String;\n  public operationName: String;\n  public closeResult: string;\n\n  /**edit */\n  public name: String;\n  public selectTasks: any = [];\n  public selectTasksList: any = [];\n  public subTaskId: String;\n  public tasks: any = [];\n  public status: String;\n  /**multiusers */\n  public toggleOnlineUser: Boolean = true;\n  public toggleFriendList: Boolean = true;\n  public onlineUser: any;\n  public friendList: any;\n  public username: String;\n  public onlineUsersList: any[];\n  public authToken = String;\n  public selectedFriendName = String;\n  public toggleBannerDisplay: Boolean = true;\n  public flagDisplayingFriendsItem: Boolean = false;\n  /**-----------Modifications------- */\n  public selectedUserId: String;\n  public selectedTaskListId: String;\n  public selectedTaskId: String;\n  public selectedTaskName: String;\n  public selectedTaskStatus: String;\n  public selectedSubTaskId: String;\n  /**component will emit event ot update\n   * task and subtask array in their respective compoenents\n   */\n\n  @Output()\n  notifyNewTaskList: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  notifyNewTask: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output()\n  notifyNewSubTask: EventEmitter<Object> = new EventEmitter<Object>();\n  constructor(\n    private taskListService: TasklistService,\n    private _toast: Toaster,\n    private _router: Router,\n    private userService: UserService,\n    private modalService: NgbModal,\n    private multiUserService: MultiUserService\n  ) {\n    const {\n      authToken,\n      firstName,\n      lastName,\n      friends,\n    } = userService.getAutheticatedUserInfo();\n    this.userId = userService.getAutheticatedUserInfo().userId;\n    this.username = firstName + ' ' + lastName;\n    this.authToken = authToken;\n    this.selectedUserId = this.userId;\n    this.usersFriendList = friends;\n    this.page = 0;\n  }\n  /**document listener for undo process */\n  @HostListener('document:keydown', ['$event'])\n  onKeyDown(ev: KeyboardEvent) {\n    if (ev.metaKey || (ev.ctrlKey && ev.key === 'z')) {\n      console.debug('undo start');\n      this.startUndoProcess();\n    }\n  }\n  ngOnInit(): void {\n    console.debug('NGONIT RELOAD_______________TASKLIST');\n    this.handeShakeAuthentication();\n    //load task list on component load\n    this.getAllTaskList(this.userId);\n  }\n  public userLogout(): any {\n    console.debug('user logout');\n    this.multiUserService.disconnectUser(this.userId);\n    /**redirect to login page */\n    setTimeout(() => this._router.navigate(['/login']), 130);\n  }\n  public handeShakeAuthentication(): any {\n    console.debug('listen to hand shake from task-list');\n    this.taskListService.autheticateUser().subscribe((data) => {\n      this.taskListService.setUser(this.authToken);\n    });\n  }\n  /**set inline users list */\n  public setOnlineUsers(users): any {\n    //console.debug('online users::');\n    this.onlineUser = users;\n  }\n  /**toggle friend list */\n  public showFriendList(): any {\n    //console.debug('Show friend list');\n    this.toggleFriendList = !this.toggleFriendList;\n    this.toggleOnlineUser = true;\n  }\n  /**set friend list */\n  public setFriendList(friends): any {\n    //console.debug('Set friend list::', friends);\n    this.friendList = friends;\n  }\n  /**toggle online userlist */\n  public showOnlineUsers(): any {\n    this.toggleOnlineUser = !this.toggleOnlineUser;\n    this.toggleFriendList = true;\n  }\n  /**open modal */\n  open(content, ops, id) {\n    //console.debug('modal open::', ops, id);\n    this.operationName = ops;\n    //console.debug(ops == 'New Task');\n    if (ops == 'New Task') {\n      //console.debug('new task case');\n      this.taskListId = id;\n      this.selectedTaskListId = id;\n    }\n    if (ops == 'New SubTask') {\n      //console.debug('new subtask case');\n      this.taskId = id;\n      this.selectedTaskId = id;\n    }\n\n    //console.debug('tasklistid::', this.taskListId);\n    //console.debug('taskid::', this.taskId);\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-create' })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed`;\n        }\n      );\n    //console.debug('Modal closed::', this.closeResult);\n  }\n  /**open edit modal */\n  openEdit(content, ops, id, name) {\n    console.debug('modal edit open::', ops, id);\n    this.operationName = ops;\n    console.debug(ops == 'Edit Task');\n    if (ops == 'Edit TaskList') {\n      console.debug('Edit TaskList case');\n      this.taskListId = id;\n      this.selectedTaskListId = id;\n      this.name = name;\n      this.selectedTaskName = name;\n\n      console.debug(\n        'selecteduser,selectedtasklistid,name::',\n        this.selectedUserId,\n        this.selectedTaskListId,\n        this.selectedTaskName\n      );\n    }\n    if (ops == 'Edit Task') {\n      console.debug('Edit task option', id);\n      /**split the incoming values from task-compnent\n       * and send it over to edit-component to complete\n       * the edit operation\n       */\n      const [taskId, name, taskListId, status] = id.split(':');\n      this.taskId = taskId;\n      this.selectedTaskId = taskId;\n      this.selectedTaskName = name;\n      this.selectedTaskListId = taskListId;\n      this.selectedTaskStatus = status;\n      this.selectTasksList = this.taskLists;\n    }\n    if (ops == 'Edit SubTask') {\n      console.debug('edit subtask case');\n      /**split the incoming values from task-compnent\n       * and send it over to edit-component to complete\n       * the edit operation\n       */\n\n      const [taskId, name, subTaskId, status, taskListId] = id.split(':');\n      //console.debug('list if from tasks::', taskListId);\n      this.taskId = taskId;\n      this.selectedTaskId = taskId;\n      this.name = name;\n      this.selectedTaskName = name;\n      this.subTaskId = subTaskId;\n      this.selectedSubTaskId = subTaskId;\n      this.taskListId = taskListId;\n      this.selectedTaskListId = taskListId;\n      this.status = status;\n      this.selectedTaskStatus = status;\n      this.selectTasks = [];\n    }\n\n    //console.debug('tasklistid::', this.taskListId);\n    //console.debug('taskid::', this.taskId);\n    this.modalService\n      .open(content, { ariaLabelledBy: 'modal-edit' })\n      .result.then(\n        (result) => {\n          this.closeResult = `Closed with: ${result}`;\n        },\n        (reason) => {\n          this.closeResult = `Dismissed`;\n        }\n      );\n    //console.debug('Modal closed::', this.closeResult);\n  }\n\n  /**get all taskLists */\n  public getAllTaskList(userId): any {\n    let userdata = {\n      userId: userId,\n    };\n    this.page = 5;\n    this.taskListService.getTaskLists(userdata, this.page).subscribe(\n      (response) => {\n        console.debug('get all task list', response.message);\n        this.fetchedAlltaskLists = response.message;\n        /**store all tasklists */\n        //console.debug('tasklists return::', response.data);\n        //this.taskLists.push(...response.data);\n        this.taskLists = response.data;\n      },\n      (error) => {\n        console.warn('Error fetching task list', error, error);\n        this.fetchedAlltaskLists = error.error.message;\n        this._toast.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n\n  /**listen for newly created task list and push it to existing array */\n  public addNewTaskList(newTaskList: any): any {\n    console.debug('refresh new taskList::', newTaskList.name);\n    //console.debug('Adding to current list');\n    /**notification for delete items for friends */\n    console.debug('notify friends for updates');\n    /**emit update notifiation to friends if any*/\n    let notification = `${this.username} Created a Task`;\n    this.notifyFriends(notification);\n    return this.taskLists.push(newTaskList);\n  }\n  /**listen for newly created task  and emitt event to update it */\n  public addNewTask(userId: any): any {\n    //console.debug('addnew task listeners::', newTask);\n    //console.debug(typeof newTask);\n    this.getAllTaskList(userId);\n    //this.notifyNewTask.emit(newTask);\n  }\n  /**listen for newly created task list and emit event to update it */\n  public addNewSubTask(userId: any): any {\n    //console.debug(typeof newSubTask);\n    //console.debug(newSubTask);\n    this.getAllTaskList(userId);\n    //this.notifyNewSubTask.emit(newSubTask);\n  }\n\n  /**toggle create subtask popup */\n  public openCreateSubTaskForm(taskId, modal): any {\n    //console.debug('Emit from task component::', taskId);\n    this.taskId = taskId;\n    this.open(modal, 'New SubTask', taskId);\n  }\n\n  /**delete task listeners from task component*/\n  public deleteTask(values): any {\n    //console.debug('Delete task listeners::', values, this.userId);\n    /**call delete service */\n    let [taskId, taskListId, userId] = values.split(':');\n    //console.debug(taskListId, taskId);\n    let taskInfo = {\n      taskListId: taskListId,\n      taskId: taskId,\n      userId: userId,\n      operation: 'delete',\n    };\n    console.debug('delete taskinfo::', taskInfo);\n    this.taskListService.updateTask(taskInfo).subscribe(\n      (response) => {\n        //console.debug('Delete api reponse::', response.message);\n        /**success toast  */\n        this._toast.open({ text: response.message, type: 'success' });\n        /**notify tasklist component for task updates */\n        let refreshUserId;\n        if (this.flagDisplayingFriendsItem) {\n          refreshUserId = this.selectedUserId;\n        } else {\n          refreshUserId = this.userId;\n        }\n        console.debug('refreshing for::', refreshUserId);\n        this.getAllTaskList(refreshUserId);\n      },\n      (error) => {\n        console.debug('Error Deleting Task::', error.error);\n        this._toast.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n    /**notification for delete items for friends */\n    console.debug('notify friends for updates');\n    /**emit update notifiation to friends if any*/\n    let notification = `${this.username} deleted a Task`;\n    this.notifyFriends(notification);\n  }\n  /**edit task listeners from task-component */\n  public editTask(values, modal): any {\n    console.debug('Edit task modal open::', values, modal);\n    this.openEdit(modal, 'Edit Task', values, name);\n  }\n  /**edit subtask listeners from sub-task-> task-component */\n  public editSubTask(values, modal): any {\n    this.openEdit(modal, 'Edit SubTask', values, name);\n  }\n  /**delete tasklist */\n  public deleteTaskList(taskListId: String): any {\n    //console.debug('delete tasklist::', taskListId);\n    /**compute input params based on loggedIn user or friend's selection */\n    let userId = this.flagDisplayingFriendsItem\n      ? this.selectedUserId\n      : this.userId;\n    console.debug('deleting task list for ::', userId);\n    let taskListInfo = {\n      userId: userId,\n      taskListId: taskListId,\n      operation: 'delete',\n    };\n    this.taskListService.updateTaskList(taskListInfo).subscribe(\n      (response) => {\n        //console.debug('Delete task list response::', response.message);\n        this._toast.open({ text: response.message, type: 'success' });\n        /**delete the entry from current tasklist */\n        this.taskLists = this.taskLists.filter(\n          (list) => list.taskListId != taskListId\n        );\n        /**notification for delete items for friends */\n        console.debug('notify friends for updates');\n        /**emit update notifiation to friends if any*/\n        let notification = `${this.username} deleted a TaskList`;\n        this.notifyFriends(notification);\n      },\n      (error) => {\n        console.debug('Error deleting tasklist::', error.error);\n        this._toast.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n  /**edit task list */\n  public editTaskLists(value): any {\n    //console.debug('edit tasklist listener::', value);\n    const [name, taskListId] = value.split(':');\n    //console.debug('to edit::', name, taskListId);\n    /**update tasklist name */\n    this.taskLists.filter((list) => {\n      if (list.taskListId === taskListId) {\n        list.name = name;\n        return list;\n      }\n    });\n  }\n  public postEditTask(value): any {\n    this.getAllTaskList(value);\n  }\n  public postEditSubTask(value): any {\n    this.getAllTaskList(value);\n  }\n  public getFriendsItems(selectedFriend): any {\n    console.debug('listen to friend selection::', selectedFriend);\n    let [friendName, friendUserId] = selectedFriend.split(':');\n    /**hide the friendlist div */\n    this.toggleFriendList = true;\n    /**switch flag to friend's view */\n    this.flagDisplayingFriendsItem = true;\n    /**fetch taskLists for friend and add to existing taskList array */\n    this.selectedUserId = friendUserId;\n    this.selectedFriendName = friendName;\n    /**display banner */\n    this.toggleBannerDisplay = false;\n    console.debug('get all task tasklist for friends::');\n    this.getAllTaskList(friendUserId);\n    /**filter the current task list based on current USERID i.e\n     * loggedIn user or selected friend\n     */\n    this.taskLists = this.taskLists.filter((list) => {\n      list.userId !== this.userId;\n    });\n    console.debug('tasklist::', this.taskLists);\n    /**toast for friend's selection */\n    this._toast.open({\n      text: `opening tasks for ${friendName}`,\n      type: 'info',\n    });\n  }\n  /**reload friendly updates */\n  public reloadFriendlyUpdates(value): any {\n    console.debug('reload listener::', value);\n    this.getAllTaskList(value);\n  }\n  /**refresh page for showLoggedInUsersTask i.e.\n   * switch from friend's view to seld\n   *\n   */\n  public showLoggedInUsersTask(userId): any {\n    console.debug('reload for self');\n    this.getAllTaskList(userId);\n    /**hide friend's banner */\n    this.toggleBannerDisplay = true;\n  }\n  /**utitlity method for realtime update notification  */\n  public notifyFriends(notification): any {\n    console.debug('notify friends for updates');\n    /**emit update notifiation to friends if any*/\n    if (this.usersFriendList.length !== 0) {\n      console.debug('updates string::', notification, this.usersFriendList);\n      this.multiUserService.notifyFriendsForUpdates(\n        notification,\n        this.usersFriendList\n      );\n    }\n  }\n  /**notification for sub task deeltion */\n  public notifyFriendsSTaskDelete(value): any {\n    console.debug('notification for sub task deletion');\n    let notification = `${this.username} deleted a SubTask`;\n    this.notifyFriends(notification);\n  }\n  /**listener for friendly task updates */\n  public friendlyUpdatesListener(): any {\n    let toastString;\n    let friendList = [];\n    console.debug('Friendly task updates');\n    this.multiUserService.friendlyTaskUpdates().subscribe((updates) => {\n      console.debug('updates listener::', updates);\n      if (typeof updates === 'string') {\n        toastString = updates;\n        console.debug('toast string::', toastString);\n      } else {\n        friendList = updates;\n        console.debug('friendlist::', updates);\n      }\n      console.debug('is friend::', friendList, this.userId);\n      if (friendList.length !== 0) {\n        friendList.map((fr) => {\n          if (fr !== null && fr === this.userId) {\n            console.debug('Found friend');\n            this._toast.open({ text: toastString, type: 'dark' });\n            //emit reload tasklist event\n            console.debug(\"reloading task for  ,since it's a friend\");\n            this.getAllTaskList(this.userId);\n          }\n        });\n      }\n    });\n  }\n  public startUndoProcess(): any {\n    console.debug(\n      'Start undo process::by the current user forthe current user'\n    );\n    console.debug('loggedIn USER:', this.userId);\n    console.debug('selected/friendID::', this.selectedUserId);\n    /**read the latest  updates done for the selctedUser\n     * which will be either current user or if he is viewing task for\n     * a friend\n     * -->call fetchhistoric data api\n     * -->on success response reload the tasklist for the selected user\n     */\n    let userInfo = {\n      userId: this.selectedUserId,\n    };\n    this.taskListService.revertLatestChange(userInfo).subscribe(\n      (response) => {\n        console.debug('revert changes api response:', response);\n        if (response.status === 200) {\n          console.debug('Revert-Success::', response.message);\n          console.debug('Reloading the current tasklist');\n          /**timeout to fetch the updated db data */\n          setTimeout(() => {\n            this.getAllTaskList(this.selectedUserId);\n            this._toast.open({ text: response.message, type: 'success' });\n          }, 1000);\n          /**notify friends about changes */\n          let notification = `${this.username} Reverted a Change`;\n          this.notifyFriends(notification);\n        } else {\n          this._toast.open({ text: response.message, type: 'danger' });\n        }\n      },\n      (error) => {\n        console.debug('Revert Change API Error::', error.error);\n        this._toast.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n  /**load more tasks */\n  public loadMoreTaskList(): any {\n    console.debug('load more tasks');\n    if (this.page === 0 || this.page < 0) {\n      this.page = 3;\n    } else {\n      this.page = --this.page;\n    }\n\n    let currentTaskList = this.taskLists;\n    console.debug('current task::', currentTaskList);\n    console.debug('task lists length::', this.taskLists.length);\n\n    let user = {\n      userId: this.selectedUserId,\n    };\n    this.taskListService.getTaskLists(user, this.page).subscribe(\n      (response) => {\n        console.debug('resposne laod more tasks::', response.data);\n        let result = response.data;\n        this.taskLists = response.data;\n        console.debug('final tasks::', this.taskLists);\n      },\n      (error) => {\n        console.debug('error load::', error.error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <div>\n    <span (click)=\"open(createModal, 'New TaskList', '')\">\n      <img class=\"addList\" src=\"/assets/addListIcon.png\" />\n      <code>Add Task List</code>\n    </span>\n    <div class=\"logout\">\n      <button class=\"btn btn-outline-dark\" (click)=\"userLogout()\">\n        Logout\n      </button>\n    </div>\n  </div>\n  <div class=\"userinfo\">\n    <figure class=\"figure\">\n      <img\n        src=\"/assets/loginUser.png\"\n        class=\"figure-img img-fluid rounded\"\n        alt=\"...\"\n        style=\"width: 30px; height: 30px;\"\n      />\n      <figcaption\n        class=\"figure-caption badge badge-success\"\n        style=\"margin-left: 25px;\"\n      >\n        {{ username }}\n      </figcaption>\n    </figure>\n  </div>\n  <div>\n    <a class=\"undo\" (click)=\"startUndoProcess()\">Undo Last Change</a>\n  </div>\n  <div [hidden]=\"toggleBannerDisplay\">\n    <button\n      class=\"btn btn-outline-dark\"\n      (click)=\"showLoggedInUsersTask(userId)\"\n    >\n      My Tasks\n    </button>\n    <span class=\"displayBanner\"\n      >Currently showing Tasks for {{ selectedFriendName }}</span\n    >\n  </div>\n  <button\n    type=\"button\"\n    class=\"btn btn-success\"\n    style=\"margin-top: 20px;\"\n    (click)=\"showOnlineUsers()\"\n  >\n    Online Users\n    <span class=\"badge badge-light\" *ngIf=\"onlineUser\">{{\n      onlineUser.length || 0\n    }}</span>\n  </button>\n  <button\n    type=\"button\"\n    class=\"btn btn-dark\"\n    style=\"margin-top: 20px; margin-left: 5px;\"\n    (click)=\"showFriendList()\"\n  >\n    Friend List\n    <span class=\"badge badge-light\" *ngIf=\"friendList\">{{\n      friendList.length || 0\n    }}</span>\n  </button>\n  <app-online-users\n    [hidden]=\"toggleOnlineUser\"\n    [userId]=\"userId\"\n    [username]=\"username\"\n    [usersFriend]=\"usersFriendList\"\n    (onlineUsers)=\"setOnlineUsers($event)\"\n  ></app-online-users>\n  <app-friend-list\n    [hidden]=\"toggleFriendList\"\n    [userId]=\"userId\"\n    [username]=\"username\"\n    (friends)=\"setFriendList($event)\"\n    (selectedFriend)=\"getFriendsItems($event)\"\n    (reloadTaskList)=\"reloadFriendlyUpdates($event)\"\n  ></app-friend-list>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-5 mt-4\" *ngFor=\"let list of taskLists\" #scrollBar>\n        <div class=\"card\" style=\"width: 22rem;\">\n          <div class=\"card-header\">\n            {{ list.name }}\n            <span class=\"taskListHeader\">\n              <img\n                class=\"add\"\n                src=\"/assets/addtaskicon.png\"\n                (click)=\"open(createModal, 'New Task', list.taskListId)\"\n              />\n              <img\n                class=\"add\"\n                src=\"/assets/removetaskicon.png\"\n                (click)=\"deleteTaskList(list.taskListId)\"\n              />\n              <img\n                class=\"add\"\n                src=\"/assets/edit.png\"\n                (click)=\"\n                  openEdit(\n                    editModal,\n                    'Edit TaskList',\n                    list.taskListId,\n                    list.name\n                  )\n                \"\n              />\n            </span>\n          </div>\n          <app-tasks\n            [taskListId]=\"list.taskListId\"\n            [userId]=\"list.userId\"\n            [loggedInUser]=\"userId\"\n            [flagOperationForFriend]=\"flagDisplayingFriendsItem\"\n            (notify)=\"openCreateSubTaskForm($event, createModal)\"\n            (delete)=\"deleteTask($event)\"\n            (edit)=\"editTask($event, editModal)\"\n            (editSTask)=\"editSubTask($event, editModal)\"\n            (notifyForSTaskDelete)=\"notifyFriendsSTaskDelete($event)\"\n          >\n          </app-tasks>\n        </div>\n      </div>\n\n      <!-- Create Modal -->\n      <ng-template #createModal let-modal>\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" id=\"modal-create\">\n            You are creating...\n          </h4>\n        </div>\n        <div class=\"modal-body\">\n          <app-create-task\n            [operationName]=\"operationName\"\n            [taskListId]=\"selectedTaskListId\"\n            [userId]=\"selectedUserId\"\n            [taskId]=\"selectedTaskId\"\n            [loggedInUser]=\"userId\"\n            [username]=\"username\"\n            [flagOperationForFriend]=\"flagDisplayingFriendsItem\"\n            [usersFriend]=\"usersFriendList\"\n            (notifyNewTaskList)=\"addNewTaskList($event)\"\n            (notifyNewTask)=\"addNewTask($event)\"\n            (notifyNewSubTask)=\"addNewSubTask($event)\"\n            (closeModal)=\"modal.close()\"\n          ></app-create-task>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-dark\"\n            (click)=\"modal.close('Save click')\"\n          >\n            Done?\n          </button>\n        </div>\n      </ng-template>\n      <!-- Edit Modal -->\n      <ng-template #editModal let-modal>\n        <div class=\"modal-header\">\n          <h4 class=\"modal-title\" id=\"modal-edit\">\n            You are editing...\n          </h4>\n        </div>\n        <div class=\"modal-body\">\n          <app-edit-task\n            [operationName]=\"operationName\"\n            [taskListId]=\"selectedTaskListId\"\n            [userId]=\"selectedUserId\"\n            [taskId]=\"selectedTaskId\"\n            [subTaskId]=\"selectedSubTaskId\"\n            [name]=\"selectedTaskName\"\n            [status]=\"selectedTaskStatus\"\n            [selectTasksList]=\"selectTasksList\"\n            [selectTasks]=\"selectTasks\"\n            [loggedInUser]=\"userId\"\n            [username]=\"username\"\n            [flagOperationForFriend]=\"flagDisplayingFriendsItem\"\n            [usersFriend]=\"usersFriendList\"\n            (notifyEditTaskList)=\"editTaskLists($event)\"\n            (notifyEditTask)=\"postEditTask($event)\"\n            (notifyEditSubTask)=\"postEditSubTask($event)\"\n            (closeModal)=\"modal.close()\"\n          ></app-edit-task>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-dark\"\n            (click)=\"modal.close('Save click')\"\n          >\n            Done?\n          </button>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"loadtasks\" [hidden]=\"toggleLoadMoreTasks\">\n    <span class=\"badge badge-pill badge-danger\" (click)=\"loadMoreTaskList()\"\n      >load more task lists...</span\n    >\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { TasklistService } from '../../task/tasklist.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { MultiUserService } from '../../multiuser/multi-user.service';\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css'],\n})\nexport class TasksComponent implements OnInit {\n  @Input() taskListId: any;\n  @Input() userId: any;\n  @Input() name: any;\n  @Input() loggedInUser: any;\n  @Input() flagOperationForFriend: any;\n  //component will emitt\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  delete: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  edit: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  editSTask: EventEmitter<String> = new EventEmitter<String>();\n  @Output()\n  notifyForSTaskDelete: EventEmitter<String> = new EventEmitter<String>();\n\n  public tasks: [Object];\n  public toggleCreateTaskForm: Boolean = false;\n  constructor(\n    private taskService: TasklistService,\n    private _toast: Toaster,\n    private multiUserService: MultiUserService\n  ) {}\n  ngOnInit(): void {\n    this.getAllTask(this.taskListId, this.userId);\n  }\n  public getAllTask(taskListId, userId): any {\n    let taskInfo = {\n      taskListId: this.taskListId,\n      userId: this.userId,\n    };\n    //console.debug('input:', taskInfo);\n    this.taskService.getTasks(taskInfo).subscribe(\n      (response) => {\n        console.debug('get all task res::', response.message);\n        /**updated tasks */\n        this.tasks = response.data;\n        //console.debug('All tasks::', this.tasks);\n      },\n      (error) => {\n        console.warn('Error::', error.error);\n      }\n    );\n  }\n  /**toggle create task pop up */\n  public openCreateTaskForm(taskListId): any {\n    this.toggleCreateTaskForm = !this.toggleCreateTaskForm;\n    console.debug('Tasklist id after popup::', taskListId);\n    this.taskListId = taskListId;\n  }\n  /**Reload tasklist post task new create */\n  public addNewTask(newTask): any {\n    console.debug('newtask in task component::', newTask);\n    return this.tasks.push(newTask);\n  }\n  /**emitt subtask creation */\n  public emitSubTaskCreation(taskId): any {\n    console.debug('Emit creation');\n    this.notify.emit(taskId);\n  }\n  /**emit subtask deletion */\n  public emitTaskDeletion(taskId, taskListId, userId): any {\n    console.debug('Emit deletetion', taskId, taskListId, userId);\n    this.delete.emit(`${taskId}:${taskListId}:${userId}`);\n  }\n  /**emit edit subtask*/\n  public editSubTask(values, taskListId): any {\n    console.debug('Emit edit subtask:', values);\n    this.editSTask.emit(`${values}:${taskListId}`);\n  }\n  /**emit edit task event */\n  public emitEditTask(taskId, name, taskListId, status): any {\n    console.debug('Emit edit task::', taskId, name, taskListId);\n    this.edit.emit(`${taskId}:${name}:${taskListId}:${status}`);\n  }\n  /**delete sub task */\n  public deleteSubTask(values): any {\n    console.debug('Delete task listeners::', values, this.userId);\n    /**call delete service */\n    let [taskId, subTaskId] = values.split(':');\n    console.debug(subTaskId, taskId);\n    let taskInfo = {\n      subTaskId: subTaskId,\n      taskId: taskId,\n      operation: 'delete',\n      userId: this.userId,\n    };\n    this.taskService.updateSubTask(taskInfo).subscribe(\n      (response) => {\n        console.debug('Delete api reponse::', response);\n        /**success toast  */\n        this._toast.open({ text: response.message, type: 'success' });\n        /**refresh for specific user */\n        let refreshUserId;\n        if (this.flagOperationForFriend) {\n          refreshUserId = this.userId;\n        } else {\n          refreshUserId = this.loggedInUser;\n        }\n        console.debug('refreshing for::', refreshUserId);\n        this.getAllTask(refreshUserId, taskId);\n        this.notifyForSTaskDelete.emit();\n      },\n      (error) => {\n        console.debug('Error Deleting Task::', error.error);\n        this._toast.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n}\n","<ul class=\"list-group\">\n  <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\n    <span class=\"task\">{{ task.name }}</span>\n    <span class=\"taskHeader\">\n      <img\n        class=\"add\"\n        src=\"/assets/addtaskicon.png\"\n        (click)=\"emitSubTaskCreation(task.taskId)\"\n      /><img\n        class=\"add\"\n        src=\"/assets/removetaskicon.png\"\n        (click)=\"emitTaskDeletion(task.taskId, task.taskListId, task.userId)\"\n      />\n      <img\n        class=\"add\"\n        src=\"/assets/edit.png\"\n        (click)=\"\n          emitEditTask(task.taskId, task.name, task.taskListId, task.status)\n        \"\n      />\n    </span>\n    <app-subtasks\n      [taskId]=\"task.taskId\"\n      [userId]=\"userId\"\n      (delete)=\"deleteSubTask($event)\"\n      (edit)=\"editSubTask($event, task.taskListId)\"\n    ></app-subtasks>\n  </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { UserService } from '../user.service';\nimport { Cookie } from 'ng2-cookies';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public email: String;\n  public password: String;\n  public loginResponse: String;\n\n  constructor(\n    private userService: UserService,\n    private _router: Router,\n    private toaster: Toaster\n  ) {}\n\n  ngOnInit(): void {}\n\n  //login\n  public loginUser(): any {\n    let userData = {\n      email: this.email,\n      password: this.password,\n    };\n    this.userService.loginService(userData).subscribe(\n      /**Handle sucess */\n      (response) => {\n        console.debug('Login service res', response);\n        this.loginResponse = `${response.message} --Redirecting To Your Tasks`;\n\n        /**get user info from response and store as cookie for auth*/\n        const { firstName, lastName, email, userId, authToken } = response.data;\n        Cookie.set('name', firstName + ' ' + lastName);\n        Cookie.set('authToken', authToken);\n        Cookie.set('email', email);\n        Cookie.set('userId', userId);\n\n        /**Set to localstorage */\n        this.userService.setAuthenticatedUser(response.data);\n\n        /**toast sucess */\n        this.toaster.open({ text: response.message, type: 'success' });\n\n        /**Redirect to TASK View */\n        setTimeout(() => this._router.navigate(['/taskList']), 3000);\n      },\n      /**handle errors */\n      (error) => {\n        console.warn('Error Login', error);\n        this.loginResponse = error.error.message;\n        this.toaster.open({ text: 'Login error', type: 'danger' });\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"loginbox\">\n    <img src=\"/assets/loginUser.png\" />\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"loginUser()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"email\"\n          required\n          [(ngModel)]=\"email\"\n          #_email=\"ngModel\"\n        />\n        <div\n          [hidden]=\"_email.valid || _email.pristine\"\n          class=\"alert alert-danger\"\n        >\n          Email is Required\n        </div>\n\n        <label for=\"password\">Password</label>\n        <input\n          class=\"form-control\"\n          name=\"password\"\n          type=\"password\"\n          required\n          [(ngModel)]=\"password\"\n          #_pwd=\"ngModel\"\n        />\n        <div [hidden]=\"_pwd.valid || _pwd.pristine\" class=\"alert alert-danger\">\n          Password Is required\n        </div>\n        <button class=\"mt-2\" [disabled]=\"!loginForm.form.valid\">Login</button>\n        <button class=\"ml-2\" [routerLink]=\"['/home']\">Cancel</button>\n\n        <div class=\"recover\">\n          <a\n            class=\"mt-10 alert-link\"\n            style=\"color: #020302;\"\n            [routerLink]=\"['/recoverPassword']\"\n            >RecoverPassword\n          </a>\n        </div>\n        <blockquote class=\"blockquote text-right\">\n          <footer class=\"blockquote-footer\">\n            <a\n              class=\"mt-10 alert-link\"\n              style=\"color: #608b60;\"\n              [routerLink]=\"['/home']\"\n              >Back To <cite title=\"Source Title\">Home</cite></a\n            >\n          </footer>\n        </blockquote>\n      </div>\n      <div class=\"loginMessage\">{{ loginResponse }}</div>\n    </form>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recoverpassword',\n  templateUrl: './recoverpassword.component.html',\n  styleUrls: ['./recoverpassword.component.css'],\n})\nexport class RecoverpasswordComponent implements OnInit {\n  /**define fields */\n  public email: String;\n  public validEmail: Boolean;\n  public recoveryMessage: String;\n  public showResetPassword: Boolean;\n  public hideRecoveryDiv: Boolean = false;\n  public code: String;\n  public password: String;\n  public cfnpassword: String;\n  public equalPwd: Boolean = false;\n  public acceptedPwd: Boolean = false;\n  public resetResponse: String;\n  public loadSpinner: Boolean = false;\n  public loadMessage: String;\n  constructor(\n    private _userService: UserService,\n    private _toaster: Toaster,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    /**Validate password */\n  }\n  /**compare password */\n  public comparePassword(): Boolean {\n    this.equalPwd = this.password === this.cfnpassword;\n    return this.equalPwd;\n  }\n  public validatePassword(): Boolean {\n    let pattern = new RegExp('^[A-Za-z0-9]\\\\w{8,64}$');\n    if (this.password === undefined) return true;\n    this.acceptedPwd = pattern.test(this.password.toString());\n    return this.acceptedPwd;\n  }\n  /**send Recovery code */\n  public sendRecoveryCode(): any {\n    let user = {\n      email: this.email,\n    };\n    console.debug('Send recovery ccode-service call', user);\n    /**Switch on loader */\n    this.loadSpinner = true;\n    this.loadMessage = 'Sending Email...';\n    this._userService.recoverPassword(user).subscribe(\n      (response) => {\n        console.debug('Recovery response', response);\n        /**Toast */\n        /**Switch off loader */\n        this.loadSpinner = false;\n        this._toaster.open({ text: response.message, type: 'success' });\n        this.recoveryMessage = response.data.Operation;\n        if (response.status === 200) this.showResetPassword = true;\n      },\n      (error) => {\n        console.warn('Error', error.error);\n        this._toaster.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n  /**Reset Password */\n  public resetPassword(): any {\n    console.debug('reset Password');\n    let resetInfo = {\n      email: this.email,\n      recoveryCode: this.code,\n      password: this.password,\n    };\n    /**Switch on loader */\n    this.loadSpinner = true;\n    this.loadMessage = 'Resetting Password....';\n    this._userService.resetPassword(resetInfo).subscribe(\n      (response) => {\n        console.debug('reset api res', response);\n        /**Switch off loader */\n        this.loadSpinner = false;\n\n        /**Compose sucess message */\n        this.resetResponse = `${response.message}-Redirecting to Login...`;\n\n        /**Toast sucess */\n        this._toaster.open({ text: response.message, type: 'success' });\n\n        /**hide the recovery div */\n        if (response.status === 200) this.hideRecoveryDiv = true;\n\n        /**Rediret to login */\n        setTimeout(() => this._router.navigate(['/login']), 3000);\n      },\n      (error) => {\n        console.warn('Error', error.error);\n        this.resetResponse = error.error.message;\n        this._toaster.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n}\n","<div class=\"container recovery\">\n  <h3>Recover Password</h3>\n  <p>\n    A <strong>Recovery Code</strong> will be sent to your registered email. Use\n    the code to reset your password\n  </p>\n  <div class=\"loader\" [hidden]=\"!loadSpinner\">{{ loadMessage }}</div>\n  <div class=\"recoveryForm\" [hidden]=\"showResetPassword\">\n    <form #recoveryform=\"ngForm\" (ngSubmit)=\"sendRecoveryCode()\">\n      <label for=\"recoveryEmail\">Recovery Email</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        required\n        placeholder=\"email\"\n        name=\"email\"\n        [(ngModel)]=\"email\"\n        #_email=\"ngModel\"\n      />\n      <div\n        [hidden]=\"_email.valid || _email.pristine\"\n        class=\"alert alert-danger\"\n      >\n        Email is required\n      </div>\n      <button class=\"mt-2\" [disabled]=\"!recoveryform.form.valid\">\n        Send Code\n      </button>\n      <button class=\"ml-2\" [routerLink]=\"['/home']\">Cancel</button>\n    </form>\n  </div>\n  <div>{{ recoveryMessage }}</div>\n  <div [hidden]=\"!showResetPassword\">\n    <h2>Enter Recovery Code</h2>\n    <form #resetform=\"ngForm\" (ngSubmit)=\"resetPassword()\">\n      <input\n        type=\"text\"\n        required\n        class=\"form-control\"\n        name=\"code\"\n        placeholder=\"recovery code\"\n        [(ngModel)]=\"code\"\n        #_code=\"ngModel\"\n      />\n      <div [hidden]=\"_code.valid || _code.pristine\" class=\"alert alert-danger\">\n        Code Is Required\n      </div>\n      <input\n        type=\"password\"\n        required\n        class=\"form-control\"\n        placeholder=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"password\"\n        (click)=\"validatePassword()\"\n        #_pwd=\"ngModel\"\n      />\n      <div [hidden]=\"_pwd.valid || _pwd.pristine\" class=\"alert alert-danger\">\n        Password Is required\n      </div>\n      <div [hidden]=\"validatePassword()\" class=\"alert alert-danger\">\n        Password should be alphanumeric and of min length 8\n      </div>\n      <input\n        class=\"form-control mt-1\"\n        type=\"password\"\n        placeholder=\"confirm password\"\n        required\n        name=\"cfnpassword\"\n        [(ngModel)]=\"cfnpassword\"\n        (click)=\"validatePassword()\"\n        #_cpwd=\"ngModel\"\n      />\n      <div [hidden]=\"comparePassword()\" class=\"alert alert-danger\">\n        Password doesn't match\n      </div>\n      <button\n        class=\"mt-2\"\n        [disabled]=\"!resetform.form.valid || !acceptedPwd || !equalPwd\"\n      >\n        Reset Password\n      </button>\n      <div>{{ resetResponse }}</div>\n    </form>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { ToastConfig, Toaster } from 'ngx-toast-notifications';\nimport { Router } from '@angular/router';\nimport lookup from 'country-code-lookup';\nimport n from 'country-js';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  /**Define fields */\n  public firstName: String;\n  public lastName: String;\n  public email: String;\n  public mobile: String;\n  public password: String;\n  public cfnpassword: String;\n  public equalPwd: Boolean = false;\n  public acceptedPwd: Boolean = false;\n  public signUpResponse: String;\n  public countriesArray = [];\n  public countries = [];\n  public country: String;\n  public countrycode: any;\n  public ctr: String = 'country';\n  public passwordError: String;\n  constructor(\n    private userService: UserService,\n    private _router: Router,\n    private _toaster: Toaster\n  ) {\n    this.passwordError = `Password should have at least 1 Lowercase,Uppercase,Special\n    Character & of min length 8 `;\n  }\n\n  ngOnInit(): void {\n    /**Compute list of countries */\n    Object.entries(lookup.countries).map((entry) =>\n      this.countriesArray.push(entry[1])\n    );\n    this.countriesArray.map((ctr) => {\n      this.countries.push(ctr.country);\n    });\n  }\n  public selectCountryCode(value): any {\n    //console.debug('select code:', `+${n.search(value)[0].phone}`);\n    this.countrycode = `+${n.search(value)[0].phone}`;\n    //console.debug('cc::', this.countrycode);\n    this.mobile = this.countrycode;\n  }\n  /**compare password */\n  public comparePassword(): Boolean {\n    this.equalPwd = this.password === this.cfnpassword;\n    return this.equalPwd;\n  }\n  public validatePassword(): Boolean {\n    let pattern = new RegExp(\n      '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})'\n    );\n    if (this.password === undefined) return true;\n    this.acceptedPwd = pattern.test(this.password.toString());\n    return this.acceptedPwd;\n  }\n  /**Signup function */\n  public signUpUser(): any {\n    console.debug('Signup user');\n    let newuser = {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      mobile: this.mobile,\n      password: this.password,\n    };\n    this.userService.signUpService(newuser).subscribe(\n      (response) => {\n        console.debug('Sign up response', response);\n        if (\n          response.status === 400 &&\n          response.data[0] === 'Invalid Password'\n        ) {\n          this.signUpResponse = this.passwordError;\n        }\n        if (response.status === 200) {\n          this.signUpResponse = `${response.message}, Redirecting to Login`;\n          /**Toast sucess */\n          this._toaster.open({ text: response.message, type: 'success' });\n          /**Route to Login page */\n          setTimeout(() => this._router.navigate(['/login']), 2000);\n        }\n      },\n      (error) => {\n        console.warn('SignUpError', error.error);\n        console.debug('error_msg', error.error.message);\n        this.signUpResponse = error.error.message;\n        this._toaster.open({ text: error.error.message, type: 'danger' });\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h3>Register</h3>\n  <div class=\"signupbox\">\n    <form #signUpForm=\"ngForm\" (ngSubmit)=\"signUpUser()\">\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        name=\"firstname\"\n        placeholder=\"Enter FirstName\"\n        required\n        [(ngModel)]=\"firstName\"\n        #_fname=\"ngModel\"\n      />\n      <div\n        [hidden]=\"_fname.valid || _fname.pristine\"\n        class=\"alert alert-danger\"\n      >\n        FirstName is required\n      </div>\n      <input\n        class=\"form-control mt-1\"\n        type=\"text\"\n        name=\"lastname\"\n        placeholder=\"Enter LastName\"\n        required\n        [(ngModel)]=\"lastName\"\n        #_lname=\"ngModel\"\n      />\n      <div\n        [hidden]=\"_lname.valid || _lname.pristine\"\n        class=\"alert alert-danger\"\n      >\n        LastName is Required\n      </div>\n      <input\n        class=\"form-control mt-1\"\n        type=\"email\"\n        placeholder=\"Enter Valid Email\"\n        required\n        name=\"email\"\n        [(ngModel)]=\"email\"\n        #_email=\"ngModel\"\n      />\n      <div\n        [hidden]=\"_email.valid || _email.pristine\"\n        class=\"alert alert-danger\"\n      >\n        Email is required for login and password recovery\n      </div>\n      <select\n        class=\"form-control mt-1\"\n        #ctry\n        required\n        [(ngModel)]=\"country\"\n        name=\"country\"\n        #_country=\"ngModel\"\n        (change)=\"selectCountryCode(ctry.value)\"\n      >\n        <option *ngFor=\"let cntry of countries\" [value]=\"cntry\">{{\n          cntry\n        }}</option>\n      </select>\n      <input\n        class=\"form-control mt-1\"\n        type=\"text\"\n        placeholder=\"Mobile\"\n        required\n        name=\"mobile\"\n        [(ngModel)]=\"mobile\"\n        #_mob=\"ngModel\"\n      />\n      <div [hidden]=\"_mob.valid || _mob.pristine\" class=\"alert alert-danger\">\n        Mobile is required\n      </div>\n      <input\n        class=\"form-control mt-1\"\n        type=\"password\"\n        placeholder=\"password\"\n        required\n        name=\"password\"\n        [(ngModel)]=\"password\"\n        #_pwd=\"ngModel\"\n      />\n      <div [hidden]=\"_pwd.valid || _pwd.pristine\" class=\"alert alert-danger\">\n        Password Is required\n      </div>\n      <div [hidden]=\"validatePassword()\" class=\"alert alert-danger\">\n        {{ passwordError }}\n      </div>\n      <input\n        class=\"form-control mt-1\"\n        type=\"password\"\n        placeholder=\"confirm password\"\n        required\n        name=\"cfnpassword\"\n        [(ngModel)]=\"cfnpassword\"\n        #_cpwd=\"ngModel\"\n      />\n      <div [hidden]=\"comparePassword()\" class=\"alert alert-danger\">\n        Password doesn't match\n      </div>\n      <button\n        class=\"mt-2\"\n        [disabled]=\"!signUpForm.form.valid || !acceptedPwd || !equalPwd\"\n      >\n        SignUp\n      </button>\n      <button class=\"ml-2\" [routerLink]=\"['/home']\">Cancel</button>\n    </form>\n    <div\n      class=\"alert alert-warning mt-2\"\n      role=\"alert\"\n      [hidden]=\"!signUpResponse\"\n    >\n      {{ signUpResponse }}\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecoverpasswordComponent } from './recoverpassword/recoverpassword.component';\nimport { UserService } from './user.service';\nimport { MultiuserModule } from '../multiuser/multiuser.module';\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, RecoverpasswordComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    MultiuserModule,\n    RouterModule.forChild([\n      {\n        path: 'recoverPassword',\n        component: RecoverpasswordComponent,\n        pathMatch: 'full',\n      },\n    ]),\n  ],\n  providers: [UserService],\n})\nexport class UserModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, onErrorResumeNext } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  //initiliaze\n  public baseurl = 'http://api.kanbanboard.co.in/api/v1';\n  constructor(private _http: HttpClient) {}\n\n  //handle exceptions\n  public handleError(error: HttpErrorResponse) {\n    console.error('http Error', error.message);\n    return Observable.throw(error.message);\n  }\n\n  //signup\n  public signUpService(newUser): any {\n    //console.debug('Signup api call', newUser);\n    let signUpRes = this._http.post(`${this.baseurl}/signup`, newUser);\n    return signUpRes;\n  }\n\n  //login\n  public loginService(userData): any {\n    //console.debug('login api call', userData);\n    let loginres = this._http.post(`${this.baseurl}/login`, userData);\n    return loginres;\n  }\n\n  //store authenticated user info\n  public setAuthenticatedUser(data): any {\n    //console.debug('Set auth user info', data);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  //get authenticated user info\n  public getAutheticatedUserInfo(): any {\n    //console.debug('get autheticated user info');\n    let lc = JSON.parse(localStorage.getItem('userInfo'));\n    //console.debug('lc::', lc);\n    return lc === null ? '' : lc;\n  }\n\n  //recover password\n  public recoverPassword(user): any {\n    //console.debug('Recover password for', user);\n    let recoverPwdRes = this._http.post(\n      `${this.baseurl}/recoverPassword`,\n      user\n    );\n    return recoverPwdRes;\n  }\n\n  //reset Password\n  public resetPassword(user): any {\n    //console.debug('reset password', user);\n    let resetPwdRes = this._http.post(`${this.baseurl}/resetPassword`, user);\n    return resetPwdRes;\n  }\n  //get country\n  public getCountry(): any {\n    //console.debug('get country');\n    let countries = this._http.get('http://country.io/names.json');\n    return countries;\n  }\n  //get country phone code\n  public getCode(): any {\n    //console.debug('get code');\n    let code = this._http.get('http://country.io/phone.json');\n    return code;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}